import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# üîê Tokens
TELEGRAM_BOT_TOKEN = "7988392037:AAFaUjcdvALKnx4EE9YmsBhdCxOK_sbcZs8"
OPENAI_API_KEY = ""

# üß† GPT Setup
openai.api_key = OPENAI_API_KEY

SYSTEM_PROMPT = (
    "‡§§‡•Å‡§Æ ‡§è‡§ï ‡§á‡§Ç‡§∏‡§æ‡§® ‡§ú‡•à‡§∏‡•á ‡§¨‡§æ‡§§ ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡•á chatbot ‡§π‡•ã‡•§ ‡§ú‡§µ‡§æ‡§¨ ‡§¨‡§π‡•Å‡§§ ‡§õ‡•ã‡§ü‡•á, ‡§∏‡•Ä‡§ß‡•á ‡§î‡§∞ casual ‡§π‡•ã‡§®‡•á ‡§ö‡§æ‡§π‡§ø‡§è ‚Äî "
    "‡§ú‡•à‡§∏‡•á ‡§ï‡•ã‡§à ‡§¶‡•ã‡§∏‡•ç‡§§ WhatsApp ‡§™‡§∞ ‡§¨‡§æ‡§§ ‡§ï‡§∞ ‡§∞‡§π‡§æ ‡§π‡•ã‡•§ ‡§π‡§∞ ‡§∏‡§µ‡§æ‡§≤ ‡§ï‡§æ ‡§ú‡§µ‡§æ‡§¨ ‡§¨‡§π‡•Å‡§§ natural ‡§î‡§∞ friendly tone ‡§Æ‡•á‡§Ç ‡§¶‡•ã‡•§ "
    "‡§ï‡•ã‡§à ‡§≤‡§Ç‡§¨‡§æ explanation ‡§®‡§π‡•Ä‡§Ç ‡§¶‡•á‡§®‡§æ ‡§π‡•à‡•§ ‡§ú‡§µ‡§æ‡§¨ ‡§Æ‡•á‡§Ç ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä emoji ‡§≠‡•Ä use ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•ã‡•§"
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‡§π‡§æ‡§Ø! ‡§Æ‡•à‡§Ç ‡§è‡§ï ‡§¶‡•ã‡§∏‡•ç‡§§‡§æ‡§®‡§æ ‡§ö‡•à‡§ü‡§¨‡•â‡§ü ‡§π‡•Ç‡§Å üòä ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§ï‡•Å‡§õ ‡§≠‡•Ä ‡§™‡•Ç‡§õ‡•ã‡•§")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_msg = update.message.text

    # GPT-4 ‡§∏‡•á ‡§ú‡§µ‡§æ‡§¨ ‡§≤‡•á‡§®‡§æ
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": SYSTEM_PROMPT},
            {"role": "user", "content": user_msg}
        ]
    )

    reply = response.choices[0].message.content.strip()
    await update.message.reply_text(reply)

# üì¶ Main Bot Function
def main():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ Bot is running...")
    app.run_polling()

if __name__ == "__main__":
    main()
