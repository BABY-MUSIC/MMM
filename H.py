import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import logging

# тЬЕ Setup logging for debugging
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# ЁЯЪл SECURITY NOTE: Replace these with environment variables in production
TELEGRAM_BOT_TOKEN = "7988392037:AAFaUjcdvALKnx4EE9YmsBhdCxOK_sbcZs8"
OPENAI_API_KEY = "YOUR_OPENAI_API_KEY"

# ЁЯФР OpenAI API key
openai.api_key = OPENAI_API_KEY

# ЁЯза ChatGPT Prompt for natural, human-like replies
SYSTEM_PROMPT = (
    "рддреБрдо рдПрдХ рдЗрдВрд╕рд╛рди рдЬреИрд╕реЗ рдмрд╛рдд рдХрд░рдиреЗ рд╡рд╛рд▓реЗ chatbot рд╣реЛред рдЬрд╡рд╛рдм рдмрд╣реБрдд рдЫреЛрдЯреЗ, рд╕реАрдзреЗ рдФрд░ casual рд╣реЛрдиреЗ рдЪрд╛рд╣рд┐рдП тАФ "
    "рдЬреИрд╕реЗ рдХреЛрдИ рджреЛрд╕реНрдд WhatsApp рдкрд░ рдмрд╛рдд рдХрд░ рд░рд╣рд╛ рд╣реЛред рд╣рд░ рд╕рд╡рд╛рд▓ рдХрд╛ рдЬрд╡рд╛рдм рдмрд╣реБрдд natural рдФрд░ friendly tone рдореЗрдВ рджреЛред "
    "рдХреЛрдИ рд▓рдВрдмрд╛ explanation рдирд╣реАрдВ рджреЗрдирд╛ рд╣реИред рдЬрд╡рд╛рдм рдореЗрдВ рдХрднреА-рдХрднреА emoji рднреА use рдХрд░ рд╕рдХрддреЗ рд╣реЛред"
)

# ЁЯЯв Start Command Handler
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("рд╣рд╛рдп! рдореИрдВ рдПрдХ рджреЛрд╕реНрддрд╛рдирд╛ рдЪреИрдЯрдмреЙрдЯ рд╣реВрдБ ЁЯШК рдореБрдЭрд╕реЗ рдХреБрдЫ рднреА рдкреВрдЫреЛред")

# ЁЯТм Message Handler for user messages
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_msg = update.message.text

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",  # рдпрд╛ "gpt-4" рдЕрдЧрд░ рдЖрдкрдХреЗ рдкрд╛рд╕ рдПрдХреНрд╕реЗрд╕ рд╣реИ
            messages=[
                {"role": "system", "content": SYSTEM_PROMPT},
                {"role": "user", "content": user_msg}
            ]
        )

        reply = response.choices[0].message.content.strip()
        await update.message.reply_text(reply)

    except Exception as e:
        logging.error(f"OpenAI Error: {e}")
        await update.message.reply_text("рд╕реЙрд░реА, рдХреБрдЫ рдЧрдбрд╝рдмрдбрд╝ рд╣реЛ рдЧрдИ ЁЯШЕ рдмрд╛рдж рдореЗрдВ рдЯреНрд░рд╛рдп рдХрд░реЗрдВред")

# ЁЯФБ Main bot runner
def main():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ЁЯдЦ Bot is running...")
    app.run_polling()

if __name__ == "__main__":
    main()
